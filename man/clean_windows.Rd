% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_windows.R
\name{clean_windows}
\alias{clean_windows}
\title{Fast window-based synteny analysis}
\usage{
clean_windows(
  faFiles,
  wd,
  genomeIDs = names(faFiles),
  refGenome = genomeIDs[1],
  sameChrOnly = FALSE,
  stripChrname = "\\\\s.*",
  minChrLen = 1e+07,
  stepSize = NULL,
  windowSize = 1000,
  nWindows = 5e+05,
  filterTopReps = 1e-04,
  maxTopHits = 50,
  minSecRat = 0.9,
  mismatchPenalty = 4,
  kmerSize = 25,
  kmerStep = 20,
  nCores = 1,
  basicParams = "-A1 -U50,500 --no-long-join -r0,0 --rmq=no -E2,1 -n1 -m0 --frag=yes",
  mm2verbose = FALSE,
  MCScanX_hCall = "MCScanX_h",
  minimap2call = "minimap2",
  makePlots = 3,
  blkSize = 10,
  tmpDir = file.path(wd, "DEEPSPACEtmpwd"),
  ppi = 96,
  minPlotDim = 8,
  maxBestMaps = 5,
  topNhits2keep = 4,
  buffer = 5,
  maxDistBtwHitsInBlk = 5e+05,
  keepEverything = FALSE,
  targetNhitsQuantile = 0.95,
  minMapq = 0,
  overwrite = FALSE,
  overwriteInput = FALSE,
  overwriteMinimap2 = FALSE,
  overwriteSynpaf = FALSE,
  orderyBySynteny = TRUE,
  sameScale = TRUE,
  braidOffset = 0.05,
  highlightInversions = FALSE,
  howRound = 0.5,
  gapProp = 0.1,
  braidAlpha = 0.75,
  ripHeightPerGenome = 0.9,
  ripWidth = 8,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{faFiles}{character vector coercible to file.paths pointing to the
genome assembly fasta files to use in the run. If faFiles is a named vector,
genomeIDs are taken as the names.}

\item{wd}{character string pointing to the directory where deepspace output
should be stored}

\item{genomeIDs}{if faFiles are not named, supply genome names here}

\item{refGenome}{the genomeID to be used as the reference. Ignored if
sameChrOnly = TRUE.}

\item{sameChrOnly}{logical, should the search only be conducted on alignments
where the query and target sequence names are identical? This speeds things
up, but should only be used in very similar genomes where inter-chromosomal
SVs are known to not exist.}

\item{stripChrname}{character string coercible to a regular expression,
passed to gsub to strip off text from chromosome names}

\item{minChrLen}{integer, the minimum sequence length. All sequences in the
fasta files shorter than this are ignored.}

\item{stepSize}{integer, the base-pair distance between adjacent window
mid points. Alternative specification to nWindows}

\item{windowSize}{integer, the base-pair size of each window}

\item{nWindows}{integer, the number of windows in the query genome. If
specified, supercedes stepSize}

\item{filterTopReps}{integer, passed to minimap2 -f. Setting to 0 can
significantly slow operations but will allow visualization of all repeats}

\item{maxTopHits}{integer, passed to minimap2 -N}

\item{minSecRat}{numeric, passed to minimap2 -p}

\item{mismatchPenalty}{numeric, passed to minimap2 -B}

\item{kmerSize}{integer, passed to minimap2 -k}

\item{kmerStep}{integer, passed to minimap2 -w}

\item{nCores}{integer, passed to minimap2 -t}

\item{basicParams}{character string of additional parameters passed to
minimap2.}

\item{mm2verbose}{logical, should minimap2 output be printed to the console?}

\item{MCScanX_hCall}{character string coercible to a valid file path pointing
to the MCScanX_h executable}

\item{minimap2call}{character string coercible to a valid file path pointing
to the minimap2 program. If installed with conda or in the path, use
"minimap2".}

\item{makePlots}{integer, specifying how many dotplots should be made. O
means no plots. 3 means make one for each step of synteny curation}

\item{blkSize}{the minimum number of windowed hits to be called a block.}

\item{tmpDir}{character string coercible to a file.path where temporary
files should be written. Cleaned out after run finishes unless this
directory already existed}

\item{ppi}{integer, pixels per inch in the dotplot}

\item{minPlotDim}{numeric, narrowest dimension of the dotplot in inches}

\item{maxBestMaps}{integer, the maximum number of best-mapping hits to keep}

\item{topNhits2keep}{integer, the number of top hits to keep}

\item{buffer}{numeric, position-rank order buffer around anchor hits to
search for additional anchors.}

\item{maxDistBtwHitsInBlk}{numeric, the maximum distance between two
adjacent hits in the same block}

\item{keepEverything}{logical, should final synteny searches be conducted on
all hits (including masked repeats etc)?}

\item{targetNhitsQuantile}{quantile to choose repetitive regions in the
target}

\item{overwrite}{logical, should all output be overwritten?}

\item{overwriteInput}{logical, should windowed fastas be overwritten?}

\item{overwriteMinimap2}{logical, should minimap2 output be overwritten?}

\item{overwriteSynpaf}{logical, should synteny output be overwritten?}

\item{orderyBySynteny}{logical, should chromosomes be ordered by synteny
(true) or by chromosome name order (false)?}

\item{sameScale}{logical, should all genomes have the same scale (TRUE) or
the same plotted size on the x-axis (FALSE)}

\item{braidOffset}{numeric, the amount (in inches) that the braids should
start along the vertical axis from the midpoint of a genome}

\item{highlightInversions}{logical, NULL or a single color, specifying
what to do with inversions. If a color, all inversions are colored as that.}

\item{howRound}{numeric, (0-inf) where lower values are more square polygons
for the chromosomes}

\item{gapProp}{numeric (0-1) the proportion of the x-axis size that should
be made up of gaps between chromosomes}

\item{braidAlpha}{numeric (0-1) specifying the opacity of the braids}

\item{verbose}{logical, should updates be printed to the console?}

\item{...}{additional arguments passed to riparian_paf}
}
\description{
\code{clean_windows} The main functionality for DEEPSPACE. Checks, parses,
and aligns genomic fasta files. Then subsets the resulting .paf files to
hits in synteny and produces dotplot and riparian plot visualizations
}
\details{
This is an annotation-free version of GENESPACE. Feed it the genome
assemblies and it produces the standard GENESPACE graphical outputs
 (dotplots, riparian). DEEPSPACE does not produce pan-gene sets. There are
 four main steps to the pipeline:

 1. Parse the fasta files. The following alignments are run: (a) all
 non-reference genomes windowed against the reference genome ... by default,
 the first genome provided is the "reference", but this can be changed by the
  user; (b) a 'daisy chain' of all genomes in the order given in genomeIDs so
   that for genomes A, B, C, alignments are done A --> B and B --> C where
   the larger genomes are windowed and aligned to the smaller genome

2. Run minimap2. The windowed genome is always the 'query' and the other
genome is the target. The user can specify all possible parameters to
minimap2 with a series of parameters in `clean_windows`. See the help file
for more details.

3. Parse the minimap2 results (.paf) into syntenic blocks. This generally
follows the GENESPACE synteny pipeline, treating minimap2 windowed alignments
 as it would the peptide-peptide alignments.
}
